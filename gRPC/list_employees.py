import grpc
import pytest
import sys, os

current_dir = os.path.dirname(__file__)
sys.path.append(current_dir)
from Protos.web_api.v1.employees_pb2 import ListEmployeesRequest
from Protos.web_api.v1.employees_pb2_grpc import EmployeesServiceStub

# –ê–¥—Ä–µ—Å gRPC-—Å–µ—Ä–≤–µ—Ä–∞ (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–∏—Ç–µ)
GRPC_SERVER_ADDRESS = "localhost:50051"

@pytest.fixture(scope="module")
def grpc_channel():
    """–°–æ–∑–¥–∞—ë—Ç gRPC-–∫–∞–Ω–∞–ª –¥–ª—è —Å–≤—è–∑–∏ —Å EmployeeService."""
    channel = grpc.insecure_channel(GRPC_SERVER_ADDRESS)
    yield channel
    channel.close()

@pytest.fixture(scope="module")
def employee_service_stub(grpc_channel):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–≥–ª—É—à–∫—É –¥–ª—è EmployeeService."""
    return EmployeesServiceStub(grpc_channel)


def test_list_employees_valid_response(employee_service_stub):
    """
    üìå –¢–µ—Å—Ç-–∫–µ–π—Å: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ API ListEmployees –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç.
    - –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ API –æ—Ç–≤–µ—á–∞–µ—Ç —Å–ø–∏—Å–∫–æ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.
    - –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π.
    """
    request = ListEmployeesRequest(companyId=1, page=1, pageSize=10)  # –ó–∞–ø—Ä–æ—Å –ø–µ—Ä–≤—ã—Ö 10 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    response = employee_service_stub.ListEmployees(request)

    assert response is not None, "–û—Ç–≤–µ—Ç –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å None"
    assert hasattr(response, "employees"), "–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø–æ–ª–µ 'employees'"
    assert isinstance(response.totalItems, int), "'totalItems' –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º"

def test_list_employees_pagination(employee_service_stub):
    """
    üìå –¢–µ—Å—Ç-–∫–µ–π—Å: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –≤ API ListEmployees.
    - –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –æ—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π.
    """
    request = ListEmployeesRequest(companyId=1, page=2, pageSize=5)  # –ó–∞–ø—Ä–æ—Å 5 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞ 2-–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    response = employee_service_stub.ListEmployees(request)

    assert len(response.employees) <= 5, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–∑–≤—Ä–∞—â—ë–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å pageSize"
    assert isinstance(response.totalItems, int), "'totalItems' –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º"

def test_list_employees_access_control(employee_service_stub):
    """
    üìå –¢–µ—Å—Ç-–∫–µ–π—Å: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞.
    - –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—É—á–∞—é—Ç PERMISSION_DENIED.
    """
    with pytest.raises(grpc.RpcError) as exc_info:
        request = ListEmployeesRequest(companyId=1)  # –ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        employee_service_stub.ListEmployees(request)

    assert exc_info.value.code() == grpc.StatusCode.PERMISSION_DENIED, "–û–∂–∏–¥–∞–ª–∞—Å—å –æ—à–∏–±–∫–∞ PERMISSION_DENIED"

def test_list_employees_empty_result(employee_service_stub):
    """
    üìå –¢–µ—Å—Ç-–∫–µ–π—Å: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–µ—Ç.
    - –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ API –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—É—Å—Ç—ã–µ —Å–ø–∏—Å–∫–∏.
    """
    request = ListEmployeesRequest(companyId=99999, page=1, pageSize=10)  # –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π ID –∫–æ–º–ø–∞–Ω–∏–∏
    response = employee_service_stub.ListEmployees(request)

    assert len(response.employees) == 0, "–û–∂–∏–¥–∞–ª—Å—è –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–º–ø–∞–Ω–∏–∏"
