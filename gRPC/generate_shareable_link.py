import grpc
import pytest
from proto.units_pb2 import GenerateShareableLinkRequest  # –ò–º–ø–æ—Ä—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤ Protobuf
from proto.units_pb2_grpc import UnitServiceStub  # –ò–º–ø–æ—Ä—Ç –∑–∞–≥–ª—É—à–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞ gRPC

# –ê–¥—Ä–µ—Å gRPC —Å–µ—Ä–≤–µ—Ä–∞ (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–∏—Ç–µ)
GRPC_SERVER_ADDRESS = "localhost:xxxxx"

@pytest.fixture(scope="module")
def grpc_channel():
    """–°–æ–∑–¥–∞–µ—Ç gRPC –∫–∞–Ω–∞–ª –¥–ª—è —Å–≤—è–∑–∏ —Å UnitService."""
    channel = grpc.insecure_channel(GRPC_SERVER_ADDRESS)
    yield channel
    channel.close()

@pytest.fixture(scope="module")
def unit_service_stub(grpc_channel):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–≥–ª—É—à–∫—É –¥–ª—è UnitService."""
    return UnitServiceStub(grpc_channel)



def test_generate_shareable_link_valid(unit_service_stub):
    """
    üìå –¢–µ—Å—Ç–æ–≤—ã–π —Å–ª—É—á–∞–π: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ API GenerateShareableLink —Å–æ–∑–¥–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –æ–±—â–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞.
    - –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É.
    - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ —Å—Å—ã–ª–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞ –∏ –Ω–µ –ø—É—Å—Ç–∞—è.
    """
    request = GenerateShareableLinkRequest(unitId=1, accessLevel="Editor", expirationTime=24)  # –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É —Å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é 24 —á–∞—Å–∞
    response = unit_service_stub.GenerateShareableLink(request)

    assert response is not None, "–û—Ç–≤–µ—Ç –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å None"
    assert hasattr(response, "link"), "–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø–æ–ª–µ 'link'"
    assert isinstance(response.link, str), "'link' –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π"
    assert len(response.link) > 10, "–°—Å—ã–ª–∫–∞ –¥–ª—è –æ–±—â–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç"

def test_generate_shareable_link_invalid_unit_id(unit_service_stub):
    """
    üìå –¢–µ—Å—Ç–æ–≤—ã–π —Å–ª—É—á–∞–π: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∫–∞–∫ API GenerateShareableLink –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã —É—Å—Ç—Ä–æ–π—Å—Ç–≤.
    - –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç NOT_FOUND –¥–ª—è –Ω–µ–≤–µ—Ä–Ω—ã—Ö –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ —É—Å—Ç—Ä–æ–π—Å—Ç–≤.
    """
    with pytest.raises(grpc.RpcError) as exc_info:
        request = GenerateShareableLinkRequest(unitId=99999, accessLevel="Editor", expirationTime=24)  # –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        unit_service_stub.GenerateShareableLink(request)

    assert exc_info.value.code() == grpc.StatusCode.NOT_FOUND, "–û–∂–∏–¥–∞–ª–∞—Å—å –æ—à–∏–±–∫–∞ NOT_FOUND –¥–ª—è –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞"

def test_generate_shareable_link_invalid_access_level(unit_service_stub):
    """
    üìå –¢–µ—Å—Ç–æ–≤—ã–π —Å–ª—É—á–∞–π: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∫–∞–∫ API GenerateShareableLink –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –¥–æ—Å—Ç—É–ø–∞.
    - –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç INVALID_ARGUMENT –¥–ª—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π –¥–æ—Å—Ç—É–ø–∞.
    """
    with pytest.raises(grpc.RpcError) as exc_info:
        request = GenerateShareableLinkRequest(unitId=1, accessLevel="InvalidRole", expirationTime=24)
        unit_service_stub.GenerateShareableLink(request)

    assert exc_info.value.code() == grpc.StatusCode.INVALID_ARGUMENT, "–û–∂–∏–¥–∞–ª–∞—Å—å –æ—à–∏–±–∫–∞ INVALID_ARGUMENT –¥–ª—è –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞"

def test_generate_shareable_link_access_control(unit_service_stub):
    """
    üìå –¢–µ—Å—Ç–æ–≤—ã–π —Å–ª—É—á–∞–π: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞.
    - –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–µ–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–∞–≤ –ø–æ–ª—É—á–∞—é—Ç PERMISSION_DENIED.
    """
    with pytest.raises(grpc.RpcError) as exc_info:
        request = GenerateShareableLinkRequest(unitId=1, accessLevel="Editor", expirationTime=24)
        unit_service_stub.GenerateShareableLink(request)

    assert exc_info.value.code() == grpc.StatusCode.PERMISSION_DENIED, "–û–∂–∏–¥–∞–ª–∞—Å—å –æ—à–∏–±–∫–∞ PERMISSION_DENIED"

def test_generate_shareable_link_expiration_time(unit_service_stub):
    """
    üìå –¢–µ—Å—Ç–æ–≤—ã–π —Å–ª—É—á–∞–π: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –≤—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ.
    - –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä –≤—Ä–µ–º–µ–Ω–∏ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.
    """
    request = GenerateShareableLinkRequest(unitId=1, accessLevel="Viewer", expirationTime=48)  # –í—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è 48 —á–∞—Å–æ–≤
    response = unit_service_stub.GenerateShareableLink(request)

    assert response is not None, "–û—Ç–≤–µ—Ç –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å None"
    assert hasattr(response, "expirationTime"), "–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø–æ–ª–µ 'expirationTime'"
    assert response.expirationTime == 48, "–í—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
