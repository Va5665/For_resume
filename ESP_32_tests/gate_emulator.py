# –≠–º—É–ª—è—Ç–æ—Ä –¥–∞—Ç—á–∏–∫–æ–≤ –¥–ª—è –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –í–æ—Ä–æ—Ç–∞
# ## üìã –û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≤–µ–¥–µ–Ω–∏—è

# - ‚è±Ô∏è –í—Ä–µ–º—è –¥–≤–∏–∂–µ–Ω–∏—è –≤–æ—Ä–æ—Ç: **15 —Å–µ–∫—É–Ω–¥**.
# - üö® –ü—Ä–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫—Ä—ã—Ç—ã—Ö –≤–æ—Ä–æ—Ç–∞—Ö ‚Äî **–∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã** –ø–æ–¥–∞—ë—Ç—Å—è —Å–∏–≥–Ω–∞–ª —Ç—Ä–µ–≤–æ–≥–∏.
# - ‚õî –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ **–°—Ç–æ–ø** –≤–æ –≤—Ä–µ–º—è –¥–≤–∏–∂–µ–Ω–∏—è:
#   - –í–æ—Ä–æ—Ç–∞ **–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è**.
#   - –ü—Ä–∏ **–ø–æ–≤—Ç–æ—Ä–Ω–æ–º –Ω–∞–∂–∞—Ç–∏–∏** –Ω–∞—á–∏–Ω–∞—é—Ç –¥–≤–∏–≥–∞—Ç—å—Å—è –≤ **–æ–±—Ä–∞—Ç–Ω—É—é —Å—Ç–æ—Ä–æ–Ω—É**.
#
# ---
from machine import Pin, WDT
import utime
import _thread  # –î–ª—è –∑–∞–ø—É—Å–∫–∞ –º–∏–≥–∞–Ω–∏—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
import gc  # –°–±–æ—Ä—â–∏–∫ –º—É—Å–æ—Ä–∞
import sys  # –î–ª—è –≤—ã–≤–æ–¥–∞ –æ—à–∏–±–æ–∫

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∏–Ω–æ–≤
try:
    trigger_pin = Pin(32, Pin.IN, Pin.PULL_DOWN)
    alarm_pin = Pin(22, Pin.OUT, value=1)
    close_gate = Pin(23, Pin.OUT, value=1)
    open_gate = Pin(4, Pin.OUT, value=1)
    lamp = Pin(5, Pin.OUT, value=1)
    indicator_led = Pin(2, Pin.OUT)
except Exception as e:
    print(f"[FATAL ERROR] –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–∏–Ω–æ–≤: {e}. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
    utime.sleep(5)
    sys.exit(1)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WDT –Ω–∞ 20 —Å–µ–∫—É–Ω–¥
wdt = WDT(timeout=20000)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
gate_open = False
blinking = False
pause = False
movement_time = 0
opening_time = 0

# Debounce
DEBOUNCE_TIME = 1000000
last_trigger_time = 0
movement_start_time = 0

def check_alarm():
    global opening_time
    while True:
        try:
            current_time = utime.time()
            if open_gate.value() == 0:
                print(f"[check_alarm] –í–æ—Ä–æ—Ç–∞ –æ—Ç–∫—Ä—ã—Ç—ã {current_time - opening_time} —Å–µ–∫")
            if open_gate.value() == 0 and current_time - opening_time > 20:
                print("üö® –ê–ª–∞—Ä–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –Ω–∞ 2 —Å–µ–∫—É–Ω–¥—ã!")
                alarm_pin.value(0)
                utime.sleep(2)
                alarm_pin.value(1)
                opening_time = current_time
            utime.sleep(1)
        except Exception as e:
            print(f"[ERROR] –í check_alarm: {e}")

def blink_lamp(duration):
    global blinking
    blinking = True
    print(f"üí° –õ–∞–º–ø–∞ –Ω–∞—á–Ω—ë—Ç –º–∏–≥–∞—Ç—å {duration} —Å–µ–∫...")

    end_time = utime.time() + duration
    while blinking and utime.time() < end_time:
        print(f"üí° –ú–∏–≥–∞–Ω–∏–µ... –æ—Å—Ç–∞–ª–æ—Å—å {end_time - utime.time()} —Å–µ–∫")
        lamp.value(0)
        utime.sleep(0.5)
        lamp.value(1)
        utime.sleep(0.5)
        wdt.feed()
    lamp.value(1)
    blinking = False
    print("üîª –ú–∏–≥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")

def trigger_handler(pin):
    print("‚ö° IRQ —Å—Ä–∞–±–æ—Ç–∞–ª!")
    try:
        global gate_open, last_trigger_time, blinking, pause, movement_time, movement_start_time, opening_time

        current_time = utime.ticks_ms()
        if utime.ticks_diff(current_time, last_trigger_time) < 2000:
            print("‚è± –ò–≥–Ω–æ—Ä: –ø—Ä–æ—à–ª–æ –º–µ–Ω—å—à–µ 2 —Å–µ–∫—É–Ω–¥ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–∏–≥–Ω–∞–ª–∞.")
            return  # –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–π

        last_trigger_time = current_time
        utime.sleep_ms(10)
        gc.collect()
        wdt.feed()  # –ö–æ—Ä–º–∏–º —Å–æ–±–∞–∫—É —Ç—É—Ç —Ç–æ–∂–µ!

        print(f"üìä –°–≤–æ–±–æ–¥–Ω–∞—è –ø–∞–º—è—Ç—å: {gc.mem_free()} –±–∞–π—Ç")
        pin_value = trigger_pin.value()
        print(f"üîç –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∏–Ω–∞: {pin_value}")
        print(f"üìä –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π: –º–∏–≥–∞–Ω–∏–µ_–∏–¥–µ—Ç={blinking}, –ø–∞—É–∑–∞={pause}, –≤–æ—Ä–æ—Ç–∞_–æ—Ç–∫—Ä—ã—Ç—ã={gate_open}")

        if pin_value == 1:
            if blinking:
                blinking = False
                pause = True
                movement_time = utime.time() - movement_start_time
                lamp.value(1)
                print(f"‚è∏ –í–æ—Ä–æ—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã, –¥–≤–∏–≥–∞–ª–∏—Å—å {movement_time} —Å–µ–∫—É–Ω–¥.")
                close_gate.value(1)
                open_gate.value(1)
            elif pause:
                print("üîÑ –î–≤–∏–≥–∞–µ–º –≤–æ—Ä–æ—Ç–∞ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏...")
                close_gate.value(int(gate_open))
                open_gate.value(int(not gate_open))
                movement_start_time = utime.time()
                _thread.start_new_thread(blink_lamp, (movement_time,))
                gate_open = not gate_open
                pause = False
                print(f"üîÑ –°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –¥–≤–∏–∂–µ–Ω–∏—è –Ω–∞–∑–∞–¥: –≤–æ—Ä–æ—Ç–∞_–æ—Ç–∫—Ä—ã—Ç—ã={gate_open}")
            else:
                print("üîì –û—Ç–∫—Ä—ã–≤–∞—é –≤–æ—Ä–æ—Ç–∞..." if not gate_open else "üîí –ó–∞–∫—Ä—ã–≤–∞—é –≤–æ—Ä–æ—Ç–∞...")
                close_gate.value(int(gate_open))
                open_gate.value(int(not gate_open))
                movement_start_time = utime.time()
                _thread.start_new_thread(blink_lamp, (15,))
                gate_open = not gate_open
                opening_time = utime.time()
                print(f"üö™ –í–æ—Ä–æ—Ç–∞ –∏–∑–º–µ–Ω–∏–ª–∏ —Å—Ç–∞—Ç—É—Å: –≤–æ—Ä–æ—Ç–∞_–æ—Ç–∫—Ä—ã—Ç—ã={gate_open}")
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –≤ trigger_handler: {e}")

def heartbeat_led():
    while True:
        print("[HB] üíì")
        indicator_led.value(1)
        utime.sleep(0.5)
        indicator_led.value(0)
        utime.sleep(0.5)

def main():
    print("üîÅ ESP –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω.")
    while True:
        try:
            print("–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ –∏–º–ø—É–ª—å—Å–∞ –Ω–∞ –ø–∏–Ω–µ 32...")
            _thread.start_new_thread(check_alarm, ())
            _thread.start_new_thread(heartbeat_led, ())

            trigger_pin.irq(trigger=Pin.IRQ_RISING | Pin.IRQ_FALLING, handler=trigger_handler)

            while True:
                gc.collect()
                print(f"[main] GC —Å–æ–±—Ä–∞–Ω. –°–≤–æ–±–æ–¥–Ω–æ –ø–∞–º—è—Ç–∏: {gc.mem_free()}")
                wdt.feed()
                print("[main] üê∂ WDT –ø–æ–∫–æ—Ä–º–ª–µ–Ω")
                utime.sleep(1)
        except Exception as e:
            print(f"[FATAL ERROR] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
            utime.sleep(5)

if __name__ == "__main__":
    main()
